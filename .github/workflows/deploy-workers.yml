name: Deploy to Cloudflare Workers

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy
    
    - name: Install wasm-pack
      uses: jetli/wasm-pack-action@v0.3.0
      with:
        version: "0.12.1"
    
    - name: Cache cargo registry
      uses: actions/cache@v3
      with:
        path: ~/.cargo/registry
        key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo index
      uses: actions/cache@v3
      with:
        path: ~/.cargo/git
        key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Cache cargo build
      uses: actions/cache@v3
      with:
        path: target
        key: ${{ runner.os }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Run tests
      run: cargo test --features workers
    
    - name: Build WASM
      run: wasm-pack build --target bundler --out-dir pkg --features workers

  deploy-staging:
    name: Deploy to Staging
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    steps:
    - uses: actions/checkout@v4
    
    - name: Install wasm-pack
      uses: jetli/wasm-pack-action@v0.3.0
      with:
        version: "0.12.1"
    
    - name: Install wrangler
      run: npm install -g wrangler
    
    - name: Build WASM
      run: wasm-pack build --target bundler --out-dir pkg --features workers --dev
    
    - name: Deploy to Staging
      uses: cloudflare/wrangler-action@v3
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        command: deploy --env staging
        workingDirectory: .

  deploy-production:
    name: Deploy to Production
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    
    - name: Install wasm-pack
      uses: jetli/wasm-pack-action@v0.3.0
      with:
        version: "0.12.1"
    
    - name: Install wrangler
      run: npm install -g wrangler
    
    - name: Build WASM
      run: wasm-pack build --target bundler --out-dir pkg --features workers --release
    
    - name: Deploy to Production
      uses: cloudflare/wrangler-action@v3
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        command: deploy --env production
        workingDirectory: .

  test-deployment:
    name: Test Deployment
    needs: [deploy-staging, deploy-production]
    runs-on: ubuntu-latest
    if: always() && (needs.deploy-staging.result == 'success' || needs.deploy-production.result == 'success')
    steps:
    - name: Test Staging
      if: needs.deploy-staging.result == 'success'
      run: |
        curl -f https://alou-agent-worker-staging.your-subdomain.workers.dev/api/health
        curl -X POST https://alou-agent-worker-staging.your-subdomain.workers.dev/api/chat \
          -H "Content-Type: application/json" \
          -d '{"message": "test"}' \
          -f
    
    - name: Test Production
      if: needs.deploy-production.result == 'success'
      run: |
        curl -f https://alou-agent-worker-prod.your-subdomain.workers.dev/api/health
        curl -X POST https://alou-agent-worker-prod.your-subdomain.workers.dev/api/chat \
          -H "Content-Type: application/json" \
          -d '{"message": "test"}' \
          -f
